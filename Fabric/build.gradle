plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

version = "${mod_v}"
group = "${mod_group}"
archivesBaseName = "${mod_name}-fabric-${mc_v}"

dependencies {
    minecraft "com.mojang:minecraft:${mc_v}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_v}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_v}+${mc_v}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")

    modImplementation("curse.maven:jei-238222:${fabric_jei_v}")
//    modImplementation("curse.maven:modmenu-308702:${modmenu_v}")
    modImplementation("curse.maven:catalogue-fabric-667377:${fabric_catalogue_v}")
    modImplementation("curse.maven:configured-fabric-667378:${fabric_configured_v}")
    modImplementation("curse.maven:cake-chomps-fabric-394718:${fabric_cake_chomps_v}")
    modImplementation("net.minecraftforge:forgeconfigapiport-fabric:${config_port_v}")
}

loom {
    accessWidenerPath = file("src/main/resources/jmc.accesswidener")

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        data {
            inherit client
            setConfigName("Fabric Data")
            ideConfigGenerated(true)
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"
            runDir("build/datagen")
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += ["src/main/generated"]
        }
    }
}

jar {
    excludes.add("jmcCommon.accesswidener")
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", "${mod_v}"

    filesMatching("fabric.mod.json") {
        expand "version": "${mod_v}"
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
